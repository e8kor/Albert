akka {

  extensions = ["akka.camel.CamelExtension"]
  camel {

    //    jmx = true
    streamingCache = true

  }

  //    rtp-dispatcher {
  //
  //      type = Dispatcher
  //      executor = "fork-join-executor"
  //      mailbox-type = "org.system.core.PrioritizedMailbox"
  //
  //      fork-join-executor {
  //
  //        parallelism-min = 2
  //        parallelism-factor = 2.0
  //        parallelism-max = 10
  //
  //      }
  //
  //      throughput = 100
  //
  //    }

  persistence {

    journal.leveldb {

      dir = target/system/journal
      native = false

    }

    snapshot-store.local.dir = target/system/snapshots

  }

  debug {
    # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill and the like)
//    autoreceive = on

    # enable function of LoggingReceive, which is to log any received message at
    # DEBUG level
//    receive = on

    # enable DEBUG logging of actor lifecycle changes
//    lifecycle = on

    # enable DEBUG logging of subscription changes on the eventStream
//    event-stream = on

  }

  # Event handlers to register at boot time (Logging$DefaultLogger logs to STDOUT)
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  # Options: ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  # log-config-on-start = on
}

#defaults {
#  rootConfig = "root.conf"
#  suiteConfig = "suite.conf"
#  requiredFiles = [${system.defaults.suiteConfig}]
#  mqURL = "nio://localhost:61616"
#  consumerEndpointUrl = ${system.defaults.mqComponent}":system.queue"
#  producerEndpointUrl = ${system.defaults.mqComponent}":system.queue"
#  commandConsumerUrl = ${system.defaults.mqComponent}":system.command.request"
#  commandProducerUrl = ${system.defaults.mqComponent}":system.command.response"
#  mqComponent = "activemq"
#  rootDir = "SYS_ROOT"
#  systemName = "system"
#  rootActor = "sys_root_actor"
#  terminatorActor = "alb_terminator"
#  excelExtension = "xls"
#}

//include "system.conf"