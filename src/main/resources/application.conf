akka {

  loglevel = "DEBUG"

  rtp-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "fork-join-executor"
    mailbox-type = "org.albert.actor.PrioritizedMailbox"
    # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 10
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 100
  }

  persistence.journal.leveldb.dir = "target/albert/journal"

  persistence.snapshot-store.local.dir = "target/albert/snapshots"

  persistence.journal.leveldb.native = false

}

desc {

  run = "Launch Mode."

  config = "Set config file path like: C:/path/to/file/config.properties"

  useTemplate = "Use mocked template file."

  saveTemplate = "Save mocked template file."

  useAutopilot = "Automatically start processing."

  help = "Show this message."

}